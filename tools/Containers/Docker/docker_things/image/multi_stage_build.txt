Before multi stage build :
    -   agar humko kuch copy karnaa hai kisi or image se
        yaa kuch execute karnaa hai kisi image me or fir whaa se copy karnaa hai dusri image me

        to 2 dockerfiles bnaa kar ek bash script ki madad se copy kartey they

After multi stage build :
    -   ek hee dockerfile me sab kuch ho jata ahi
    -   hum dockerfile me likh saktey hai kii kiaa copy karnaa hai of kisme se

    e.g.
        FROM golang:1.7.3
        WORKDIR /go/src/github.com/alexellis/href-counter/
        RUN go get -d -v golang.org/x/net/html
        COPY app.go .
        RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .

        FROM alpine:latest
        RUN apk --no-cache add ca-certificates
        WORKDIR /root/
        COPY --from=0 /go/src/github.com/alexellis/href-counter/app .
        CMD ["./app"]

    -   multiple FROM statements in your Dockerfile
    -   each FROM instruction can use a different base
    -   each of them begins a new stage of the build
    -   can selectively copy artifacts from one stage to another

    -   stages can be referred by their integer number, starting with 0 for the first FROM instruction
    -   stages can be named by adding an as <NAME> to the FROM instruction

        e.g.
            FROM golang:1.7.3 as builder
            WORKDIR /go/src/github.com/alexellis/href-counter/
            RUN go get -d -v golang.org/x/net/html
            COPY app.go    .
            RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .

            FROM alpine:latest
            RUN apk --no-cache add ca-certificates
            WORKDIR /root/
            COPY --from=builder /go/src/github.com/alexellis/href-counter/app .
            CMD ["./app"]

Stop at a specific build stage :

        -   can specify a target build stage
            e.g.
                $ docker build --target builder -t alexellis2/href-counter:latest .

-   COPY --from instruction can be used to copy from a separate image
    either using the local image name, a tag available locally or on a Docker registry, or a tag ID
    e.g.
        COPY --from=nginx:latest /etc/nginx/nginx.conf /nginx.conf
