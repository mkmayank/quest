-   Create a abstract class

        public abstract class SingleFragmentActivity extends AppCompatActivity {

            protected abstract Fragment createFragment();

            @LayoutRes
            protected int getLayoutResId() {
                return R.layout.activity_fragment;
            }

            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                setContentView(getLayoutResId());

                FragmentManager fm = getSupportFragmentManager();
                Fragment fragment = fm.findFragmentById(R.id.fragment_container);
                if (fragment == null) {
                    fragment = createFragment();
                    fm.beginTransaction()
                            .add(R.id.fragment_container, fragment)
                            .commit();
                }
            }
        }

-   make activity subclass of above class and implement abstract method to return fragment

        public class CrimeActivity extends SingleFragmentActivity {

            @Override
            protected Fragment createFragment() {
                return new CrimeFragment();
            }
        }

subclasses can choose to override getLayoutResId() to return a layout other than activity_fragment.xml
